% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/size.R
\name{size}
\alias{size}
\title{Exact sizes for single or faceted ggplots}
\usage{
size(cols = NULL, rows = NULL, units = "in", ...)
}
\arguments{
\item{cols}{width of single unfaceted ggplot or widths of multiple facets of a faceted ggplot, this is the cols argument of \code{ggh4x::force_panelsizes()}}

\item{rows}{height of single unfaceted ggplot or heights of multiple facets of a faceted ggplot, this is the rows argument of \code{ggh4x::force_panelsizes()}}

\item{units}{\if{html}{\out{<string>}} the unit used for the numeric \code{cols} and \code{rows} arguments, default = "in". grid::unit() is used on these arguments prior to passing to \code{ggh4x::force_panelsizes()}.

If NULL, arguments \code{cols} and \code{rows} are instead supplied as unitless numeric vectors to \code{ggh4x::force_panelsizes()}. Proportions will instead be used to shape the facets instead of exact sizes.}

\item{...}{arguments passed to \code{ggh4x::force_panelsizes()}
See examples for explanation of behavior and use of \code{respect} argument}
}
\value{
Output of \code{ggh4x::force_panelsizes()}, a list object of class "forcedsize"
}
\description{
Wrapper for \code{ggh4x::force_panelsizes()}
}
\details{
See examples for explanation of behavior
}
\examples{
# Single plot / unfaceted
p1 <- ggplot2::ggplot(mtcars, ggplot2::aes(disp, mpg)) +
  ggplot2::geom_point()

# Faceted 2 x 2 grid
p2 <- p1 + ggplot2::facet_grid(vs ~ am)

# Specify exact size of a single plot
# units = "in" by default, these are the same
p1 + mk::size(4, 3, units = "in")
p1 + mk::size(4, 3)

# Specify exact sizes of facets
p2 + mk::size(c(4, 2), c(3, 1), units = "in")

# Length one numeric for recycling through each facet
# NOTE: this specifies sizes for EACH FACET, not for entire plot
  # for a faceted plot, must specify facet sizes/proportions individually
p2 + mk::size(3, 1.5, units = "in")

# NULL units will INDEPENDENTLY make widths proportionally sized
# to each other and heights proportionally sized, entire canvas filled
p2 + mk::size(c(4, 2), c(2, 1), units = NULL)

# NULL units with respect = TRUE, same idea, but unitless proportions
# will be proportional to each other, canvas may not be totally filled
# similar idea to ggplot2::theme(aspect.ratio = ...)
p2 + mk::size(c(4, 2), c(2, 1), units = NULL, respect = TRUE)

# NULL units only work as proportions individually for
# widths and heights, so these two appear to look the same
p1
p1 + mk::size(4, 3, units = NULL)

# Need respect = TRUE again here for unitless
# widths/heights to be proportional to each other
# These are similar but achieved a bit differently
p1 + mk::size(4, 2.5, units = NULL, respect = TRUE)
p1 + ggplot2::theme(aspect.ratio = 2.5 / 4)
}
