% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/se_long_data.R
\name{se_long_data}
\alias{se_long_data}
\title{Transform SummarizedExperiment object to long form}
\usage{
se_long_data(se, assay = 1, values.to = "expr", silent = FALSE, strict = TRUE)
}
\arguments{
\item{se}{a SummarizedExperiment object}

\item{assay}{an assay name or index for expression values}

\item{values.to}{name of long-format dataframe column to store expression values in, default = "expr"}

\item{silent}{suppress message about not explicitly supplying an assay argument, default FALSE}

\item{strict}{if TRUE (default), error if,
\itemize{
\item "se_rownames" is a column in rowData(se) or colData(se)
\item "se_colnames" is a column in colData(se) or rowData(se)
\item any column names are shared between colData(se) or rowData(se)
\item "values.to" in columns of colData(se) or rowData(se)
}

if FALSE, attempt to execute, but may have unintended effects in the left join operations}
}
\value{
a dataframe in long format
}
\description{
Supply a SummarizedExperiment object and an assay and get a dataframe that is left-joined with information from \code{colData(se)} and \code{rowData(se)}, useful for plotting
}
\details{
"se_rownames" and "se_colnames" are used internally for joining operations, which in the case of \code{dplyr::left_join()} require a column to join on
}
\examples{
\dontrun{
# Subset an SE object to a gene of interest, then convert to long form
library(SummarizedExperiment)
se.sub <- subset(se, subset = gene \%in\% "FOXP3")
df <- mk::se_long_data(se.sub, "cpm", "FOXP3")
}
}
